{"version":3,"sources":["APIKey.js","components/layout/Navbar.js","components/layout/Footer.js","components/home/SearchForm.js","actions/searchActions.js","actions/types.js","components/home/MovieCard.js","components/home/MoviesContainer.js","components/home/Landing.js","components/home/Movie.js","reducers/searchReducer.js","reducers/index.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APIKey","Navbar","className","to","aria-hidden","Footer","href","target","rel","SearchForm","onChange","e","props","searchMovie","value","onSubmit","preventDefault","fetchMovies","text","id","this","type","name","placeholder","Component","connect","state","movies","dispatch","payload","axios","get","then","response","data","catch","err","console","log","MovieCard","movie","src","Poster","alt","Title","Year","imdbID","MoviesContainer","content","Response","Search","map","index","key","Landing","Movie","fetchMovie","match","params","Genre","Released","Rated","imdbRating","Director","Writer","Actors","Plot","loading","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c71726fc.chunk.js","sourcesContent":["module.exports ={\r\n    APIKey:'ade3bfee'\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Navbar() {\r\n    return (\r\n            <nav className=\"navbar navbar-light bg-dark mb-5\">\r\n                <div className=\"container\">\r\n                    <div className=\"navbar-header\">\r\n                        <Link className=\"navbar-brand text-white text-lg brand-text\" to=\"/\">MovieSeriesInfo</Link>\r\n                    </div>\r\n                    <ul className=\"navbar-nav ml-auto text-light d-inline-block\">\r\n                        <li className=\"nav-item d-inline-block mr-4\">\r\n                            <i className=\"fab fa-imdb text-warning fa-5x\" aria-hidden=\"true\"></i>\r\n                        </li>\r\n                        <li className=\"nav-item d-inline-block mr-4\">\r\n                            <i className=\"fab fa-react text-info fa-5x\" aria-hidden=\"true\"></i>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"footer p-3 mt-4 text-center bg-dark text-light\">\r\n                        Developed By:\r\n                        <span className=\"text-warning font-weight-normal\">\r\n                                        Harshit Upadhyay\r\n                        </span>\r\n                        , Using <i className=\"fab fa-react\" /> React JS &amp; Redux JS\r\n                        integrated with external movies data API\r\n                        <a\r\n                            href=\"http://www.omdbapi.com/\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            OMDB\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react'\r\nimport {searchMovie,fetchMovies} from '../../actions/searchActions'\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nexport class SearchForm extends Component {\r\n\r\n    onChange =e=>{\r\n        this.props.searchMovie(e.target.value)\r\n    }\r\n\r\n    onSubmit = e =>{\r\n        e.preventDefault();\r\n        this.props.fetchMovies(this.props.text);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron jumbotron-fluid mt-5 text-center\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4 mb-3\">\r\n                        <i className=\"fa fa-search\" /> Search for a movie ,TV series ..\r\n                    </h1>\r\n                    <form id=\"searchForm\" onSubmit={this.onSubmit}>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"searchText\"\r\n                            placeholder=\"Search Movies, TV Series ...\"\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-bg mt-3\">\r\n                            Search\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state=>({\r\n    text: state.movies.text\r\n})\r\n\r\nexport default connect(mapStateToProps,{searchMovie,fetchMovies})(SearchForm)\r\n","import {SEARCH_MOVIE} from './types'\r\nimport {FETCH_MOVIES} from './types'\r\nimport {FETCH_MOVIE} from './types'\r\nimport axios from 'axios'\r\n\r\nimport {APIKey} from '../APIKey'\r\n\r\nexport const searchMovie = text => dispatch =>{\r\n    dispatch({\r\n        type: SEARCH_MOVIE,\r\n        payload:text\r\n    })\r\n}\r\n\r\nexport const fetchMovies = text => dispatch=>{\r\n    axios.get(`https://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\r\n        .then(response=>dispatch({\r\n            type: FETCH_MOVIES,\r\n            payload:response.data\r\n        }))\r\n        .catch(err=> console.log(err))\r\n}\r\n\r\nexport const fetchMovie = id => dispatch=>{\r\n    axios.get(`https://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\r\n        .then(response=>dispatch({\r\n            type: FETCH_MOVIE,\r\n            payload:response.data\r\n        }))\r\n        .catch(err=> console.log(err))\r\n}","export const SEARCH_MOVIE = 'SEARCH_MOVIE'\r\nexport const FETCH_MOVIES = 'FETCH_MOVIES'\r\nexport const FETCH_MOVIE = 'FETCH_MOVIE'","import React, { Component } from 'react'\r\nimport {Link}  from 'react-router-dom'\r\n\r\nexport class MovieCard extends Component {\r\n    render() {\r\n        const { movie } = this.props\r\n        return (\r\n            <div className=\"col-md-3 mb-5\">\r\n                <div className=\"card card-body bg-dark text-center h-100\">\r\n                    <img className=\"w-100 mb-2\" src={movie.Poster} alt=\"Movie Cover\" />\r\n                    <h5 className=\"text-light card-title\">\r\n                        {movie.Title} - {movie.Year}\r\n                    </h5>\r\n                    <Link className=\"btn btn-primary\" to={'/movie/' + movie.imdbID}>\r\n                    Movie Details\r\n                    <i className=\"fas fa-chevron-right\" />\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieCard\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport MovieCard from './MovieCard';\r\n\r\nexport class MoviesContainer extends Component {\r\n    render() {\r\n        const {movies} = this.props;\r\n        let content = '';\r\n\r\n        content = movies.Response === \"True\" ? movies.Search.map((movie,index)=>{\r\n            return <MovieCard key={index} movie={movie} />\r\n        }):null\r\n        return (\r\n            <div className='row'>\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    movies: state.movies.movies\r\n})\r\n\r\nexport default connect(mapStateToProps)(MoviesContainer)\r\n","import React, { Component } from 'react'\r\nimport SearchForm from './SearchForm'\r\nimport MoviesContainer from './MoviesContainer'\r\n\r\nexport class Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <SearchForm/>\r\n                <MoviesContainer/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Landing\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {fetchMovie} from '../../actions/searchActions'\r\n\r\nexport class Movie extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.fetchMovie(this.props.match.params.id)\r\n    }\r\n    render() {\r\n        const {movie} = this.props\r\n        return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-md-4 card card-body\">\r\n                        <img src={movie.Poster} className=\"thumbnail\" alt=\"Poster\" />\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        <h2 className=\"mb-4\">{movie.Title}</h2>\r\n                        <ul className=\"list-group\">\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Genre:</strong> {movie.Genre}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Released:</strong> {movie.Released}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Rated:</strong> {movie.Rated}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>IMDB Rating:</strong> {movie.imdbRating}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Director:</strong> {movie.Director}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Writer:</strong> {movie.Writer}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Actors:</strong> {movie.Actors}\r\n                        </li>\r\n                        </ul>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"card card-body bg-dark my-5 text-light\">\r\n                        <div className=\"col-md-12\">\r\n                        <h3>About </h3>\r\n                        {movie.Plot}\r\n                        <hr />\r\n                        <a\r\n                            href={'https://www.imdb.com/title/' + movie.imdbID}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            className=\"btn btn-primary\"\r\n                        >\r\n                            View on IMDB\r\n                        </a>\r\n                        <Link to=\"/\" className=\"btn btn-default text-light\">\r\n                            Go Back To Search\r\n                        </Link>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    loading: state.movies.loading,\r\n    movie: state.movies.movie\r\n})\r\n\r\nexport default connect(mapStateToProps,{fetchMovie})(Movie)\r\n","import { SEARCH_MOVIE, FETCH_MOVIES,FETCH_MOVIE } from '../actions/types';\r\n\r\nconst initialState = {\r\n    text: '',\r\n    movies: [],\r\n    loading: false,\r\n    movie: []\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SEARCH_MOVIE:\r\n            return {\r\n                ...state,\r\n                text: action.payload,\r\n                loading: false\r\n            }\r\n        case FETCH_MOVIES:\r\n            return {\r\n                ...state,\r\n                movies: action.payload\r\n            }\r\n        case FETCH_MOVIE:\r\n            return {\r\n                ...state,\r\n                movie: action.payload\r\n            }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport searchReducer from './searchReducer';\r\n\r\nexport default combineReducers({\r\n    movies:searchReducer\r\n})","import {createStore,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly'\r\nimport rootReducer from '../reducers'\r\n\r\nconst middleware= [thunk];\r\nconst initialState = {};\r\n\r\nconst store = createStore(rootReducer,initialState,composeWithDevTools\r\n    (applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React from 'react';\nimport {Provider} from 'react-redux'\nimport {HashRouter as Router,Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Footer from './components/layout/Footer'\nimport Landing from './components/home/Landing'\nimport Movie from './components/home/Movie'\n\nimport store from './redux/store'\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Navbar/>\n        <Route exact path='/' component={Landing} />\n        <Route exact path='/movie/:id' component={Movie} />\n        <Footer/>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}